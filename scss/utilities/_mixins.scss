// ==========================================================================
// Mixins
// ==========================================================================

// BEM selectors
//for element inside a block

@mixin e($element) {
  &__#{$element} {
    @content;
  }
}

@mixin m($modifier) {
  &--#{modifier} {
    @content;
  }
}


//Media queries

@mixin mq($break) {
  @if $break == "small" {
    @media (min-width: $brkpoint-sm) and (max-width: $brkpoint-md) {
      @content;
    }
  }
  @else if $break == "medium" {
    @media (min-width: $brkpoint-md + 1) {
     @content;
    }
  }
  @else if $break == "large" {
    @media(min-width: $brkpoint-lg) {
      @content;
    }
  }
  @else {
    @error "Whoops! No value could be retrieved for `#{$break}`.";
  }
}
//theme color keu,value map
@mixin bg-colors($map) {
  @each $theme, $color in $map {
    &--#{$theme} {
      background-color: $color;
    }
  }  
}

// Generate modifier color classes

// Generating :before or :after pseudo-element shapes


// Image replacement

// Adjacent sibling margins

// Grid Columns

// Generate column modifier classes
